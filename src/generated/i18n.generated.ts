/* DO NOT EDIT, file generated by nestjs-i18n */
  
/* eslint-disable */
/* prettier-ignore */
import { Path } from "nestjs-i18n";
/* prettier-ignore */
export type I18nTranslations = {
    "errors": {
        "NotNullViolation": string;
        "UniqueViolation": string;
        "ForeignKeyViolation": string;
        "UnknownPostgresError": string;
        "Unexpected error!": string;
        "User not found": string;
        "Unauthorized": string;
        "Validation failed (uuid is expected)": string;
        "Book not found": string;
        "Failed to add category to book": string;
        "Failed to add subcategory to book": string;
        "Failed to remove subcategory from book": string;
        "Failed to remove category from book": string;
        "Order not found": string;
        "All quantities must be greater than zero": string;
        "Books must not be empty": string;
        "Some books are not available": string;
        "Order already canceled": string;
        "Order already confirmed": string;
        "Not enough stock": string;
        "This order does not belong to you": string;
    };
    "properties": {
        "title": string;
        "writer_id": string;
        "share_house_id": string;
        "editor": string;
        "release_year": string;
        "description": string;
        "status": string;
        "cover_type_id": string;
        "weight": string;
        "page_count": string;
        "isbn": string;
        "price": string;
        "price_dhs": string;
        "discount": string;
        "discount_type": string;
        "stock": string;
        "images_urls": string;
        "categories_ids": string;
        "subcategories_ids": string;
        "meta_title": string;
        "meta_description": string;
        "meta_image": string;
        "canonical": string;
        "slug": string;
        "structured_data": string;
    };
    "validation": {
        "IsString": string;
        "IsNotEmpty": string;
        "IsEmail": string;
        "IsBoolean": string;
        "Min": string;
        "Max": string;
        "IsOptional": string;
        "IsNumber": string;
        "IsArray": string;
        "IsDateString": string;
        "IsIn": string;
        "IsEnum": string;
        "ArrayNotEmpty": string;
        "IsPositive": string;
        "IsInt": string;
        "IsUUID": string;
        "IsUrl": string;
        "IsBlockArray": string;
        "IsCreditCard": string;
        "MaxLength": string;
        "ArrayMaxSize": string;
        "ArrayMinSize": string;
        "IsObject": string;
        "NoSpaces": string;
        "IsPhoneNumber": string;
        "Allow": string;
        "IsDefined": string;
        "Validate": string;
        "ValidateBy": string;
        "ValidateIf": string;
        "ValidateNested": string;
        "ValidatePromise": string;
        "IsLatLong": string;
        "IsLatitude": string;
        "IsLongitude": string;
        "Equals": string;
        "NotEquals": string;
        "IsEmpty": string;
        "IsNotIn": string;
        "IsDivisibleBy": string;
        "IsNegative": string;
        "MinDate": string;
        "MaxDate": string;
        "Contains": string;
        "NotContains": string;
        "IsAlpha": string;
        "IsAlphanumeric": string;
        "IsDecimal": string;
        "IsAscii": string;
        "IsBase64": string;
        "IsByteLength": string;
        "IsCurrency": string;
        "IsFQDN": string;
        "IsFullWidth": string;
        "IsHalfWidth": string;
        "IsVariableWidth": string;
        "IsHexColor": string;
        "IsHexadecimal": string;
        "IsMacAddress": string;
        "IsIP": string;
        "IsPort": string;
        "IsISBN": string;
        "IsISIN": string;
        "IsISO8601": string;
        "IsJSON": string;
        "IsJWT": string;
        "IsLowercase": string;
        "IsMobilePhone": string;
        "IsISO31661Alpha2": string;
        "IsISO31661Alpha3": string;
        "IsMongoId": string;
        "IsMultibyte": string;
        "IsSurrogatePair": string;
        "IsFirebasePushId": string;
        "IsUppercase": string;
        "Length": string;
        "MinLength": string;
        "Matches": string;
        "IsMilitaryTime": string;
        "IsHash": string;
        "IsISSN": string;
        "IsBooleanString": string;
        "IsNumberString": string;
        "IsBase32": string;
        "IsBIC": string;
        "IsBtcAddress": string;
        "IsDataURI": string;
        "IsEAN": string;
        "IsEthereumAddress": string;
        "IsHSL": string;
        "IsIBAN": string;
        "IsIdentityCard": string;
        "IsISRC": string;
        "IsLocale": string;
        "IsMagnetURI": string;
        "IsMimeType": string;
        "IsOctal": string;
        "IsPassportNumber": string;
        "IsPostalCode": string;
        "IsRFC3339": string;
        "IsRgbColor": string;
        "IsSemVer": string;
        "IsStrongPassword": string;
        "IsTimeZone": string;
        "IsBase58": string;
        "is-tax-id": string;
        "is-iso4217-currency-code": string;
        "ArrayContains": string;
        "ArrayNotContains": string;
        "ArrayUnique": string;
        "IsNotEmptyObject": string;
        "IsInstance": string;
        "IsLength": string;
        "BankCodeValidator": string;
        "WhitelistValidation": string;
        "IsUuid": string;
    };
};
/* prettier-ignore */
export type I18nPath = Path<I18nTranslations>;
