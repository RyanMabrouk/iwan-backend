networks:
  prod-network:
    external: true
    name: prod-network
    attachable: true
volumes:
  api-postgres-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./api-postgres
x-common-config: &common-config
  networks:
    - prod-network
# x-postgres-common-config: &postgres-common-config
#   <<: *common-config
#   image: bitnami/postgresql:16.2.0-debian-12-r17
#   healthcheck:
#     test: ['CMD-SHELL', 'pg_isready -U postgres']
#     interval: 30s
#     timeout: 10s
#     retries: 3
#   restart: unless-stopped
services:
  # api-postgres-prod:
  #   <<: *postgres-common-config
  #   container_name: api-postgres-prod
  #   ports:
  #     - '${API_DATABASE_PORT}:5432'
  #   environment:
  #     POSTGRES_USER: ${API_DATABASE_USER}
  #     POSTGRES_PASSWORD: ${API_DATABASE_PASSWORD}
  #     POSTGRES_DB: ${API_DATABASE_NAME}
  #   volumes:
  #     - api-postgres-data:/bitnami/postgresql:rw
  api-prod:
    <<: *common-config
    build:
      context: ../
      dockerfile: docker/prod/Dockerfile
    container_name: api-prod
    ports:
      - '${API_PORT}:${API_PORT}'
    volumes:
      - ../:/app
      - /app/node_modules
    restart: unless-stopped
    # depends_on:
    # api-postgres:
    #   condition: service_healthy
  supabase-prod:
    <<: *common-config
    image: supabase/postgres:15.1.1.94
    container_name: supabase-prod
    ports:
      - '${SUPABASE_PORT}:5432'
    environment:
      POSTGRES_USER: ${SUPABASE_USER}
      POSTGRES_PASSWORD: ${SUPABASE_PASSWORD}
    restart: unless-stopped
